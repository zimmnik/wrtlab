#!/bin/bash
# shellcheck disable=SC1004,2034
#set -o xtrace
set -o pipefail
set -o nounset
set -o errexit

WRTLAB_WAN_IF="eth0"
WRTLAB_WAN_IP="10.64.0.253"
WRTLAB_WAN_MASK="255.255.255.0"
WRTLAB_WAN_GW="10.64.0.254"
WRTLAB_WAN_DNS="10.64.0.254"
WRTLAB_WAN_MAC="52:54:00:55:02:00"

WRTLAB_MNGT_IF="eth1"
WRTLAB_MNGT_IP="192.168.1.254"
WRTLAB_MNGT_MASK_LONG="255.255.255.0"
WRTLAB_MNGT_NAME="${NAME}_mngt" WRTLAB_MNGT_IP_HOST="192.168.1.253"

WRTLAB_HOME_IF="eth2"
WRTLAB_HOME_IP="192.168.4.254"
WRTLAB_HOME_MASK_LONG="255.255.255.0"
WRTLAB_HOME_NAME="${NAME}_home"
WRTLAB_HOME_IP_HOST="192.168.4.253"

WRTLAB_DMZ_IF="eth3"
WRTLAB_DMZ_IP="192.168.3.254"
WRTLAB_DMZ_MASK_LONG="255.255.255.0"
WRTLAB_DMZ_NAME="${NAME}_dmz"
WRTLAB_DMZ_IP_HOST="192.168.3.253"

WRTLAB_VPN_IP="192.168.5.254"
WRTLAB_VPN_MASK_SHORT="24"
WRTLAB_VPN_NET="192.168.5.0/24"
WRTLAB_VPN_PORT="5151"
WRTLAB_VPN_PORT_HIDDEN="53"

WRTLAB_TEST_VPN_IP="192.168.5.200"
WRTLAB_TEST_VPN_MASK_SHORT="32"
WRTLAB_TEST_VPN_GW="192.168.5.254"
WRTLAB_TEST_VPN_NET="192.168.5.0/24"
WRTLAB_TEST_VPN_EXT_MAC="52:54:00:55:02:01"

WRTLAB_TEST_MNGT_IP="192.168.1.252"
WRTLAB_TEST_MNGT_MAC="52:54:00:55:02:02"

WRTLAB_TEST_HOME_IP="192.168.4.252"
WRTLAB_TEST_HOME_MAC="52:54:00:55:02:03"

WRTLAB_TEST_DMZ_IP="192.168.3.252"
WRTLAB_TEST_DMZ_MAC="52:54:00:55:02:04"

WRTLAB_TEST_NETWORKS=(--network "network=wrtlab-${NAME}-test-wan,mac=${WRTLAB_WAN_MAC}" --network "network=wrtlab-${NAME}-test-mngt" --network "network=wrtlab-${NAME}-test-home" --network "network=wrtlab-${NAME}-test-dmz" --check mac_in_use=off)
WRTLAB_PROD_NETWORKS=(--network "type=direct,source=eno1.2,source_mode=bridge,mac=${WRTLAB_WAN_MAC}" --network "type=direct,source=eno1.1,source_mode=bridge" --network "type=direct,source=eno1.4,source_mode=bridge" --network "type=direct,source=eno1.3,source_mode=bridge")

function bake_vars_specific () {
  #FYI https://unix.stackexchange.com/questions/330660/prevent-grep-from-exiting-in-case-of-nomatch
  grep -R -l __WRTLAB_MNGT_IF__ 		"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_MNGT_IF__%${WRTLAB_MNGT_IF}%g"               || [[ $? == 1 ]]
  grep -R -l __WRTLAB_MNGT_IP__ 		"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_MNGT_IP__%${WRTLAB_MNGT_IP}%g"               || [[ $? == 1 ]]
  grep -R -l __WRTLAB_MNGT_IP_HOST__ 		"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_MNGT_IP_HOST__%${WRTLAB_MNGT_IP_HOST}%g"     || [[ $? == 1 ]] 
  grep -R -l __WRTLAB_MNGT_MASK_LONG__ 		"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_MNGT_MASK_LONG__%${WRTLAB_MNGT_MASK_LONG}%g" || [[ $? == 1 ]]

  grep -R -l __WRTLAB_HOME_IF__ 		"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_HOME_IF__%${WRTLAB_HOME_IF}%g"               || [[ $? == 1 ]]
  grep -R -l __WRTLAB_HOME_IP__ 		"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_HOME_IP__%${WRTLAB_HOME_IP}%g"               || [[ $? == 1 ]]
  grep -R -l __WRTLAB_HOME_MASK_LONG__ 		"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_HOME_MASK_LONG__%${WRTLAB_HOME_MASK_LONG}%g" || [[ $? == 1 ]]

  grep -R -l __WRTLAB_DMZ_IF__ 			"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_DMZ_IF__%${WRTLAB_DMZ_IF}%g"                 || [[ $? == 1 ]]
  grep -R -l __WRTLAB_DMZ_IP__ 			"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_DMZ_IP__%${WRTLAB_DMZ_IP}%g"                 || [[ $? == 1 ]]
  grep -R -l __WRTLAB_DMZ_MASK_LONG__ 		"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_DMZ_MASK_LONG__%${WRTLAB_DMZ_MASK_LONG}%g"   || [[ $? == 1 ]]

  grep -R -l __WRTLAB_TEST_MNGT_IP__ 		"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_TEST_MNGT_IP__%${WRTLAB_TEST_MNGT_IP}%g"     || [[ $? == 1 ]]
  grep -R -l __WRTLAB_TEST_MNGT_MAC__ 		"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_TEST_MNGT_MAC__%${WRTLAB_TEST_MNGT_MAC}%g"   || [[ $? == 1 ]]

  grep -R -l __WRTLAB_TEST_HOME_IP__ 		"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_TEST_HOME_IP__%${WRTLAB_TEST_HOME_IP}%g"     || [[ $? == 1 ]]
  grep -R -l __WRTLAB_TEST_HOME_MAC__ 		"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_TEST_HOME_MAC__%${WRTLAB_TEST_HOME_MAC}%g"   || [[ $? == 1 ]]

  grep -R -l __WRTLAB_TEST_DMZ_IP__ 		"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_TEST_DMZ_IP__%${WRTLAB_TEST_DMZ_IP}%g"       || [[ $? == 1 ]]
  grep -R -l __WRTLAB_TEST_DMZ_MAC__ 		"tmp/${NAME}" | xargs --no-run-if-empty sed -i "s%__WRTLAB_TEST_DMZ_MAC__%${WRTLAB_TEST_DMZ_MAC}%g"     || [[ $? == 1 ]]
}

function create_venv_specific () {

 if [ ! -f "${LIBVIRT_DIR_POOL_PATH}/Fedora-Workstation-Live-x86_64-36-1.5.iso" ]; then
   WRTLAB_PATH="$PWD"
   mkdir "$LIBVIRT_DIR_POOL_PATH" || true && cd "$LIBVIRT_DIR_POOL_PATH"
   curl -LO https://download.fedoraproject.org/pub/fedora/linux/releases/36/Workstation/x86_64/iso/Fedora-Workstation-Live-x86_64-36-1.5.iso
   curl -LO https://download.fedoraproject.org/pub/fedora/linux/releases/36/Workstation/x86_64/iso/Fedora-Workstation-36-1.5-x86_64-CHECKSUM
   sha256sum --ignore-missing -c Fedora-Workstation-36-1.5-x86_64-CHECKSUM
   rm -v Fedora-Workstation-36-1.5-x86_64-CHECKSUM
   cd "$WRTLAB_PATH"
 fi

 echo "Domain: wrtlab-${NAME}-test-vpn"
 virt-install -n "wrtlab-${NAME}-test-vpn"  \
 --osinfo linux2020 \
 --vcpus 1 --ram 2048 --video none --graphics none  \
 --boot=cdrom --location "${LIBVIRT_DIR_POOL_PATH}/Fedora-Workstation-Live-x86_64-36-1.5.iso" \
 --extra-args "console=ttyS0 root=live:CDLABEL=Fedora-WS-Live-36-1-5 rd.live.image systemd.unit=multi-user.target" \
 --network "network=wrtlab-${NAME}-test-wan" \
 --noautoconsole | grep . | tail -1
 "tmp/${NAME}/tests/setup-vpn.exp" "wrtlab-${NAME}-test-vpn" | grep . | tail -1

 run_alpine315_test "wrtlab-${NAME}-test-mngt" setup-mngt.exp "wrtlab-${NAME}-test-mngt" "${WRTLAB_TEST_MNGT_MAC}"
 run_alpine315_test "wrtlab-${NAME}-test-dmz" setup-dmz.exp "wrtlab-${NAME}-test-dmz" "${WRTLAB_TEST_DMZ_MAC}"
 run_alpine315_test "wrtlab-${NAME}-test-home" setup-home.exp "wrtlab-${NAME}-test-home" "${WRTLAB_TEST_HOME_MAC}"
}

function test_specific () {

  "tmp/${NAME}/tests/test-vpn.exp" "wrtlab-${NAME}-test-vpn"     | grep . | tail -1
  "tmp/${NAME}/tests/test-mngt.exp" "wrtlab-${NAME}-test-mngt"   | grep . | tail -1
  "tmp/${NAME}/tests/test-dmz.exp" "wrtlab-${NAME}-test-dmz"     | grep . | tail -1
  "tmp/${NAME}/tests/test-home.exp" "wrtlab-${NAME}-test-home"   | grep . | tail -1
}
